import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes
// ignore_for_file: unnecessary_brace_in_string_interps

//WARNING: This file is automatically generated. DO NOT EDIT, all your changes would be lost.

typedef LocaleChangeCallback = void Function(Locale locale);

class I18n implements WidgetsLocalizations {
  const I18n();
  static Locale _locale;
  static bool _shouldReload = false;

  static set locale(Locale newLocale) {
    _shouldReload = true;
    I18n._locale = newLocale;
  }

  static const GeneratedLocalizationsDelegate delegate = GeneratedLocalizationsDelegate();

  /// function to be invoked when changing the language
  static LocaleChangeCallback onLocaleChanged;

  static I18n of(BuildContext context) =>
    Localizations.of<I18n>(context, WidgetsLocalizations);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  /// "你好 ${name}"
  String greetTo(String name) => "你好 ${name}";
  /// "登入"
  String get login => "登入";
  /// "登出"
  String get loginout => "登出";
  /// "中文"
  String get language => "中文";
  /// "切换语言"
  String get lang => "切换语言";
  /// "首页"
  String get home => "首页";
  /// "兑换"
  String get exchange => "兑换";
  /// "市场"
  String get market => "市场";
  /// "我的"
  String get mine => "我的";
  /// "我的背包"
  String get mypackage => "我的背包";
  /// "充值"
  String get recharge => "充值";
  /// "提现"
  String get withdraw => "提现";
  /// "提现地址："
  String get withdrawaddress => "提现地址：";
  /// "提现数量："
  String get withdrawnum => "提现数量：";
  /// "提现规则："
  String get withdrawrule => "提现规则：";
  /// "提现成功"
  String get withdrawsuccess => "提现成功";
  /// "到账数量："
  String get arrivalquantity => "到账数量：";
  /// "团队"
  String get team => "团队";
  /// "我的团队"
  String get myteam => "我的团队";
  /// "我的收益"
  String get myearn => "我的收益";
  /// "邀请好友"
  String get invite => "邀请好友";
  /// "密码"
  String get password => "密码";
  /// "手机"
  String get phone => "手机";
  /// "邮箱"
  String get email => "邮箱";
  /// "恭喜获得"
  String get congratulations => "恭喜获得";
  /// "请输入手机号码"
  String get pleaseinputphone => "请输入手机号码";
  /// "请输入邮箱"
  String get pleaseinputemail => "请输入邮箱";
  /// "请输入密码"
  String get pleaseinputpwd => "请输入密码";
  /// "输入交易密码"
  String get pleasetxpassword => "输入交易密码";
  /// "请输入验证码"
  String get verificationcode => "请输入验证码";
  /// "请输入新密码"
  String get pleaseinputnewpwd => "请输入新密码";
  /// "请确认新密码"
  String get confirminputnewpwd => "请确认新密码";
  /// "确认并前往登入"
  String get confirmlogin => "确认并前往登入";
  /// "获取验证码"
  String get getcoude => "获取验证码";
  /// "重新获取"
  String get reacquire => "重新获取";
  /// "兑换成功"
  String get exchagesuccess => "兑换成功";
  /// "设置"
  String get setting => "设置";
  /// "安全中心"
  String get safecenter => "安全中心";
  /// "帮助反馈"
  String get feedback => "帮助反馈";
  /// "关于"
  String get about => "关于";
  /// "数量"
  String get number => "数量";
  /// "日期"
  String get date => "日期";
  /// "时间"
  String get time => "时间";
  /// "总计"
  String get total => "总计";
  /// "完成"
  String get finish => "完成";
  /// "实名认证"
  String get verified => "实名认证";
  /// "目前绑定"
  String get currentbinding => "目前绑定";
  /// "登入密码"
  String get loginpwd => "登入密码";
  /// "交易密码"
  String get txpassword => "交易密码";
  /// "保存"
  String get save => "保存";
  /// "金铲子"
  String get shovel_gold => "金铲子";
  /// "银铲子"
  String get shovel_sliver => "银铲子";
  /// "铜铲子"
  String get shovel_iron => "铜铲子";
  /// "新手"
  String get newer => "新手";
  /// "前往背包查看"
  String get gotopackage => "前往背包查看";
  /// "邀请记录"
  String get inviterecord => "邀请记录";
  /// "可用资产"
  String get availablebalance => "可用资产";
  /// "分享奖励"
  String get teamgroupshare => "分享奖励";
  /// "领导奖金"
  String get teamgroupleader => "领导奖金";
  /// "直推奖"
  String get teamgrouppush => "直推奖";
  /// "输出"
  String get output => "输出";
  /// "预估"
  String get estimate => "预估";
  /// "昨日团队收益价值"
  String get lasetteamvalue => "昨日团队收益价值";
  /// "总价值收益"
  String get totalteamvalue => "总价值收益";
  /// "建立自己团队的矿场\n参与MIGO矿池分红"
  String get totalnotice => "建立自己团队的矿场\n参与MIGO矿池分红";
  /// "立即参与"
  String get teamjoin => "立即参与";
  /// "小区静态产出"
  String get teamstaticvalue => "小区静态产出";
  /// "余额"
  String get balance => "余额";
  /// "选择币种"
  String get choosecoin => "选择币种";
  /// "价格"
  String get price => "价格";
  /// "手续费减免"
  String get feereduction => "手续费减免";
  /// "当前${level}级别"
  String currlevel(String level) => "当前${level}级别";
  /// "下一级${level}级别"
  String nextlevel(String level) => "下一级${level}级别";
  /// "立即兑换"
  String get redeemnow => "立即兑换";
  /// "确认兑换"
  String get confirmexchange => "确认兑换";
  /// "供应量"
  String get supply => "供应量";
  /// "最少获得"
  String get leastget => "最少获得";
  /// "价格滑点"
  String get priceslippage => "价格滑点";
  /// "手续费"
  String get handlingfee => "手续费";
  /// "用户名或密码错误"
  String get erroraccount => "用户名或密码错误";
  /// "忘记密码?"
  String get forgetpwd => "忘记密码?";
  /// "注册新账号"
  String get register => "注册新账号";
  /// "下一步"
  String get next => "下一步";
  /// "确认"
  String get sure => "确认";
  /// "取消"
  String get cancel => "取消";
  /// "请问确定要登出吗？"
  String get canyouexit => "请问确定要登出吗？";
  /// "扫描二维码进行充值"
  String get scanqrtorecharge => "扫描二维码进行充值";
  /// "充值地址（复制地址如下)"
  String get copyaddress => "充值地址（复制地址如下)";
  /// "1. 该币种合约地址为migo.token"
  String get notice1 => "1. 该币种合约地址为migo.token";
  /// "2. 此地址只接受EOS，发送其他币种到此地址将不可找回。"
  String get notice2 => "2. 此地址只接受EOS，发送其他币种到此地址将不可找回。";
  /// "3. 默认充值至钱包余额。"
  String get notice3 => "3. 默认充值至钱包余额。";
  /// "4. 您的充值地址不会经常改变，可以重复充值；如有更改，我们会尽量通过网站公告或邮件通知您。"
  String get notice4 => "4. 您的充值地址不会经常改变，可以重复充值；如有更改，我们会尽量通过网站公告或邮件通知您。";
  /// "请输入或长按粘贴"
  String get pleaseinputorcopy => "请输入或长按粘贴";
  /// "请输入数量"
  String get pleaseinputonumber => "请输入数量";
  /// "可提数量："
  String get availableamount => "可提数量：";
  /// "实际到账："
  String get actualarrival => "实际到账：";
  /// "设置新密码"
  String get resetpwd => "设置新密码";
}

class _I18n_zh_CN extends I18n {
  const _I18n_zh_CN();

  @override
  TextDirection get textDirection => TextDirection.ltr;
}

class _I18n_en_US extends I18n {
  const _I18n_en_US();

  /// "Hello ${name}"
  @override
  String greetTo(String name) => "Hello ${name}";
  /// "Sign in"
  @override
  String get login => "Sign in";
  /// "Sign out"
  @override
  String get loginout => "Sign out";
  /// "English"
  @override
  String get language => "English";
  /// "Language"
  @override
  String get lang => "Language";
  /// "Home"
  @override
  String get home => "Home";
  /// "Exchange"
  @override
  String get exchange => "Exchange";
  /// "Market"
  @override
  String get market => "Market";
  /// "Mine"
  @override
  String get mine => "Mine";
  /// "My backpackage"
  @override
  String get mypackage => "My backpackage";
  /// "Recharge"
  @override
  String get recharge => "Recharge";
  /// "Withdraw"
  @override
  String get withdraw => "Withdraw";
  /// "Withdrawal address:"
  @override
  String get withdrawaddress => "Withdrawal address:";
  /// "Withdraw quantity:"
  @override
  String get withdrawnum => "Withdraw quantity:";
  /// "Withdrawal rules:"
  @override
  String get withdrawrule => "Withdrawal rules:";
  /// "Withdraw success"
  @override
  String get withdrawsuccess => "Withdraw success";
  /// "Arrival quantity:"
  @override
  String get arrivalquantity => "Arrival quantity:";
  /// "Team"
  @override
  String get team => "Team";
  /// "My Team"
  @override
  String get myteam => "My Team";
  /// "My earnings"
  @override
  String get myearn => "My earnings";
  /// "Invite friends"
  @override
  String get invite => "Invite friends";
  /// "Password"
  @override
  String get password => "Password";
  /// "Mobile"
  @override
  String get phone => "Mobile";
  /// "Email"
  @override
  String get email => "Email";
  /// "Congratulations"
  @override
  String get congratulations => "Congratulations";
  /// "Phone number"
  @override
  String get pleaseinputphone => "Phone number";
  /// "Email"
  @override
  String get pleaseinputemail => "Email";
  /// "Password"
  @override
  String get pleaseinputpwd => "Password";
  /// "Enter transaction password"
  @override
  String get pleasetxpassword => "Enter transaction password";
  /// "Verification code"
  @override
  String get verificationcode => "Verification code";
  /// "New password"
  @override
  String get pleaseinputnewpwd => "New password";
  /// "Confirm password"
  @override
  String get confirminputnewpwd => "Confirm password";
  /// "Confirm and Sign in"
  @override
  String get confirmlogin => "Confirm and Sign in";
  /// "Verification code"
  @override
  String get getcoude => "Verification code";
  /// "Reacquire"
  @override
  String get reacquire => "Reacquire";
  /// "Successful redemption"
  @override
  String get exchagesuccess => "Successful redemption";
  /// "Setting"
  @override
  String get setting => "Setting";
  /// "Security center"
  @override
  String get safecenter => "Security center";
  /// "Feedback"
  @override
  String get feedback => "Feedback";
  /// "About"
  @override
  String get about => "About";
  /// "Quantity"
  @override
  String get number => "Quantity";
  /// "Date"
  @override
  String get date => "Date";
  /// "Time"
  @override
  String get time => "Time";
  /// "Total"
  @override
  String get total => "Total";
  /// "Done"
  @override
  String get finish => "Done";
  /// "Verified"
  @override
  String get verified => "Verified";
  /// "Current binding"
  @override
  String get currentbinding => "Current binding";
  /// "Login password"
  @override
  String get loginpwd => "Login password";
  /// "Transaction password"
  @override
  String get txpassword => "Transaction password";
  /// "Save"
  @override
  String get save => "Save";
  /// "Golden shovel"
  @override
  String get shovel_gold => "Golden shovel";
  /// "Sliver shovel"
  @override
  String get shovel_sliver => "Sliver shovel";
  /// "Copper shovel"
  @override
  String get shovel_iron => "Copper shovel";
  /// "Novice"
  @override
  String get newer => "Novice";
  /// "Go to backpack"
  @override
  String get gotopackage => "Go to backpack";
  /// "Invitation record"
  @override
  String get inviterecord => "Invitation record";
  /// "Available balance"
  @override
  String get availablebalance => "Available balance";
  /// "Share rewards"
  @override
  String get teamgroupshare => "Share rewards";
  /// "Leadership Bonus"
  @override
  String get teamgroupleader => "Leadership Bonus";
  /// "Direct Push Award"
  @override
  String get teamgrouppush => "Direct Push Award";
  /// "Output"
  @override
  String get output => "Output";
  /// "Estimate"
  @override
  String get estimate => "Estimate";
  /// "Yesterday's team earnings value"
  @override
  String get lasetteamvalue => "Yesterday's team earnings value";
  /// "Total revenue value"
  @override
  String get totalteamvalue => "Total revenue value";
  /// "Build your own team of mines\nparticipate in MIGO mining pool dividends"
  @override
  String get totalnotice => "Build your own team of mines\nparticipate in MIGO mining pool dividends";
  /// "Participate now"
  @override
  String get teamjoin => "Participate now";
  /// "Community static output"
  @override
  String get teamstaticvalue => "Community static output";
  /// "Balance"
  @override
  String get balance => "Balance";
  /// "Currency"
  @override
  String get choosecoin => "Currency";
  /// "Price"
  @override
  String get price => "Price";
  /// "Fee reduction"
  @override
  String get feereduction => "Fee reduction";
  /// "Current level ${level}"
  @override
  String currlevel(String level) => "Current level ${level}";
  /// "Next level ${level}"
  @override
  String nextlevel(String level) => "Next level ${level}";
  /// "Redeem now"
  @override
  String get redeemnow => "Redeem now";
  /// "Confirm redemption"
  @override
  String get confirmexchange => "Confirm redemption";
  /// "Supply"
  @override
  String get supply => "Supply";
  /// "Least get"
  @override
  String get leastget => "Least get";
  /// "Price slippage"
  @override
  String get priceslippage => "Price slippage";
  /// "Handling fee"
  @override
  String get handlingfee => "Handling fee";
  /// "Error account or password"
  @override
  String get erroraccount => "Error account or password";
  /// "Forget password?"
  @override
  String get forgetpwd => "Forget password?";
  /// "Sign up"
  @override
  String get register => "Sign up";
  /// "Next"
  @override
  String get next => "Next";
  /// "Confirm"
  @override
  String get sure => "Confirm";
  /// "Cancel"
  @override
  String get cancel => "Cancel";
  /// "Are you sure you want to log out?"
  @override
  String get canyouexit => "Are you sure you want to log out?";
  /// "Scan the QR code to recharge"
  @override
  String get scanqrtorecharge => "Scan the QR code to recharge";
  /// "Recharge address (copy address)"
  @override
  String get copyaddress => "Recharge address (copy address)";
  /// "1. The contract address of this currency is migo.token"
  @override
  String get notice1 => "1. The contract address of this currency is migo.token";
  /// "2. This address only accepts EOS, sending other currencies to this address will not be able to retrieve it."
  @override
  String get notice2 => "2. This address only accepts EOS, sending other currencies to this address will not be able to retrieve it.";
  /// "3. Recharge to the wallet balance by default."
  @override
  String get notice3 => "3. Recharge to the wallet balance by default.";
  /// "4. Your recharge address will not change frequently, you can recharge; if there is any change, we will try our best to notify you via website announcement or email."
  @override
  String get notice4 => "4. Your recharge address will not change frequently, you can recharge; if there is any change, we will try our best to notify you via website announcement or email.";
  /// "Please enter or long press to paste"
  @override
  String get pleaseinputorcopy => "Please enter or long press to paste";
  /// "Please enter the quantity"
  @override
  String get pleaseinputonumber => "Please enter the quantity";
  /// "Available amount:"
  @override
  String get availableamount => "Available amount:";
  /// "Actual arrival:"
  @override
  String get actualarrival => "Actual arrival:";
  /// "Reset password"
  @override
  String get resetpwd => "Reset password";

  @override
  TextDirection get textDirection => TextDirection.ltr;
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<WidgetsLocalizations> {
  const GeneratedLocalizationsDelegate();
  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("zh", "CN"),
      Locale("en", "US")
    ];
  }

  LocaleResolutionCallback resolution({Locale fallback}) {
    return (Locale locale, Iterable<Locale> supported) {
      if (isSupported(locale)) {
        return locale;
      }
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    };
  }

  @override
  Future<WidgetsLocalizations> load(Locale locale) {
    I18n._locale ??= locale;
    I18n._shouldReload = false;
    final String lang = I18n._locale != null ? I18n._locale.toString() : "";
    final String languageCode = I18n._locale != null ? I18n._locale.languageCode : "";
    if ("zh_CN" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_zh_CN());
    }
    else if ("en_US" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
    }
    else if ("zh" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_zh_CN());
    }
    else if ("en" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
    }

    return SynchronousFuture<WidgetsLocalizations>(const I18n());
  }

  @override
  bool isSupported(Locale locale) {
    for (var i = 0; i < supportedLocales.length && locale != null; i++) {
      final l = supportedLocales[i];
      if (l.languageCode == locale.languageCode) {
        return true;
      }
    }
    return false;
  }

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => I18n._shouldReload;
}